JAVA:
-> It is Object Oriented Programming Language
->It is introduction by Sun MicroSystems in 1996
->Java is an improved language from c and c++
->It is also known as web application language
 
Features of web application language:
1.cross platform/os independency
2.cross device/device independency
3.cross network/Network independency

History of Java:
1990: Sun micro systm was started
          b programmers started and led by James Gosling
1991:They started one project called "Green Project".
         That project is to develop programming language
         This Language is for sake of electronic device
1992: Oak Language introduction
1993: In this year they are promoting totally Oak application.
1994: Oak been Converted for Web application
1995: HOT Java Browser was introduced
1996: Java Language was introduced 
          JDK->Java Development Kit
2007: onwords Oracle Corporation
---------------------------------------------------------------
Content of java:
1.core java/java language(coding skills)
2.Advanced java/web technologies
 JSP,JDBC,Servlet  (HTML,CSS,JS....),SQL
   
	 3-tier architecture
 front end(HTML) -> [Servelet/jsp]---->[database]
                     web server    jdbc       db
3.Java Full Stack
core java
adv java
MVC(Spring boot) framework

4.Android applications
 (Android Studio)
--------------------------------
Contents:
1.I/O statements
2.Data types & Variables
3.Operators
4.Control Statements[if,loop]
5.Logic Oriented Programming
6.String,Math,Date 
7.Exception Handling
8.I/O Stream
9.OOP
10.Multithreading
11.Collection & Generics.
---------------------------------------
Core java:
Features:
->Java is a Case Sensitive Language (Lower Case)
->It is high level language
->Java is OOP language
->Java is compiled & interpreter language
->Byte code convertion
->Native code Generation
->Support of external lanuages
     java,Html
     java,xml
     java,sql
->It's a Secured & robust programming language
->It's a Multithreaded programming language
->Types of user interfaces
      ->GUI (Graphical User Interface)
      ->CUI (Character User Interface)


Implementation Requirements:
Hardware Req:
p2 processor onwards
4GB RAM onwards
540 GB harddisk onwards

Software req:
any os
JDK 11 (Oracle Corporation)
after installation of jdk path is to be set

other's s/w's:
edit plus
notepad ++
eclipse
netbeans

how to develop in online?
search : GDB compiler for java

how to check java version.
java --version

Program Development:
1.write code in
    filename.java using notepad editor
2.compile with
     javac complier
     javac filename.java
3.run with
     java interpreter.
     java filename


jdk architecture:
diagram

a.java
	javac
a.class

byte code
	java
java native code
	jre
cpu
-------------------
java program syntax:
class classname
{
public static void main(String... args){
statement;
}
}
save: ctrl+s
compile: javac a.java
run : java a

classname and filename should be same

Hierarachy of java package:
java-package 
 subpackage:
   lang
   io
   util
   text
   math
   date
   applet
   awt
   sql
   net
Note:
java.lang is default imported package
------------------
I/O Statement:
output handling:
the process of writing/printing some text console.

Method:
java.lang.System.out.print('hello');
System.out.println("abcd");

println includes new line

Wap Hello World
notepad first.java

class first{
public static void main(String... args){
System.out.println("hello world");
}
}

javac first.java
java first
-----------------------
wap to print world wide web

import static java.lang.System.*;
class p{
public static void main(String... nk){
out.print("world");
out.print("wide");
out.print("web");
}
}
--------------------------------
token means keywords:

Java tokens are keywords :
abstract
assert
boolean
break
byte
case
catch
char
class
continue
default
do
double
else
enum
extends
final
finally
float
for
if
implements
import
instanceof
int
interface
long
native
new
null
false
true
package
private
protected
public
return
short
static
strictfp
super
switch
synchronized
this
throw
throws
transient
try
void
voltile
while
const
goto
-----------------------
Escape charaters & Escape Machanism:
Escape charaters:
\n ->new line
\t ->tabspace or new horizontal tab
\b ->backspace

Escape Machanism:

regular    | escap
\b 		\\b
\n		\\n
\t		\\t
"		\"
'		\'
\		\\

package basic;
/*wap to print
 "love"
    'you'
        \mom\
*/
public class b {
    public static void main(String[] args) {
 System.err.println(" \"love\"  \n\t \'you\' \n\t\t \\mom\\");       
    }
    
}
----------------------------------------------
package basic;
/*wap to print
 world 
        wide 
                web
*/
public class b {
    public static void main(String[] args) {
 System.err.println(" world  \n\t wide \n\t\t\b\b\b\b web");       
    }
    
}
-----------------------------------------
Data Types:
data types are have two types:
1.primitive
2.non primitive
---------------------
Non-Primitive:
Non-primitive datatypes are collection of object type
ex:
String name="Nitish Kumar";
String address=""

java.lang.String
->It holds multiple values upto 2GB.
-------------------------
Primitive:
they are types holds one value

primitive: they are 2 types
1.numeric
2.non-numeric

Numeric:
This can be read -ve,+ve,int,float.

Datatype	purpose		range	no.of bytes
byte	   it hold very small	-128 to  1byte
		int value	+127
short 	   medium int value     +_32k     2byte
int		huge int vale    +_ 214k  4byte
long	very huge val		processor  8byte
float       floating val	7decimals   4byte
double       floating no's       15decimals  8byte

note: 
java default integer type is int
java default floating type is double

-----------------------------------------
non -numeric:
char:
it holds 1 char
storage capacity is 1 byte

boolean:
it holds either true or false
storage capacity is 1 bit.
-----------------------------------
class a{
public static void main(String args[]){
byte b=90;
short s=32000;
int i=123456789;
long l=123456789;  //long constant
long l1=1234567890123456L; //long constant
float f=12;  //float constant
float f1=14.4f; //float constant
double d=45.45;
char c='A';
String str="word or para...";

System.out.println("byte : "+b+"\nshort : "+s+"\nint : "+i+"\nlong : "+l+"\nlong1 : "+l1+"\nfloat : "+f+"\nfloat : "+f1+"\ndouble : "+d+"\nchar : "+c+"\nstring : "+str);
}
}
--------------------------------------
variable:
a user name temporary stroage location of RAM.
Feature:
it should be declared first 
it never be a reserved word
it can contain alphabets,numbers,special characters(_,$)
first character never be a digit.

variable initialization & declaration:
int x;
int x,y;
String name="nitish"
float op1=10.3f;

valid :
a
a1
a_b
a_

invalid:
1a
a b
^a
$a
-----------------
class a{
public static void main(String args[]){
int a=1;
int a_b=2;
int a_=3;
int _a=4;
int a1=5;
int a$=6;
System.out.println(a+" "+a_b+" "+a_+" "+_a+" "+a1+" "+a$);
}
}
-----------------------------------
Input Handling:
The process of reading set of characters from keyboard
1.java.lang.System.in
This Object represents input device 
2.java.util.Scanner

Scanner:
This class object reads flow of characters from keyboard

usage:
import java.util.Scanner;

create Scanner Object:
Scanner sc=new Scanner(System.in);

new operator:
it allocates the memory dynamically .

Methods:
int n=sc.nextInt();
float n=sc.nextFloat();
double n=sc.nextDouble();
long n=sc.nextLong();
String s=sc.next();  //one word
String s=sc.nexrLine();  //multiple words

//wap to read your name & print with  Hello : xxxxx
import static java.lang.System.*;
import java.util.Scanner;
class a{
public static void main(String... args){
Scanner sc=new Scanner(in);
out.print("Enter name : ");
String name=sc.nextLine();
System.out.println("Hello : "+name);
}
}
--------------
1.wap to read 2 integers and print their sum
2.wap to read 3 strings join together and display as concatination string.
----------------------
Operators:
1.Arithmatic Ops  +,-,*,/,%
2.Relational or comparision Ops  >, < ,>=,<=,==,!=
3.Logical Ops &&,||,!
4.Assignment Ops =,+=,-=,/=,
5.uniary Ops ++,--
6.Bitwise Ops &,|,^,~
7.Shift Ops  >>,<<
8.Terinary Ops  ? :

Arithmatic Ops:
wap to read length & breadth of rectangle print its area & perimeter.

import java.util.Scanner;
class a{
public static void main(String args[]){
Scanner sc=new Scanner(System.in);
System.out.print("Enter length : ");
int l=sc.nextInt();
System.out.print("Enter breadth : ");
int b=sc.nextInt();
int a=l*b;
int p=2*(l+b);
System.out.println("area of rect : "+a+"\nperi of rect : "+p);
}
}
-------------------------------
wap to read side of a square print its area & perimeter.
import java.util.Scanner;
class a{
public static void main(String args[]){
Scanner sc=new Scanner(System.in);
System.out.print("Enter side : ");
int s=sc.nextInt();
int a=s*s;
int p=4*s;
System.out.println("area of sqr : "+a+"\nperi of sqr : "+p);
}
}
---------------------------------------------------
wap to read radius of a circle, print its area & perimeter.
wap for PTR, and Compute SI
import java.util.Scanner;
class a{
public static void main(String args[]){
Scanner sc=new Scanner(System.in);
System.out.print("Enter pri amo : ");
int p=sc.nextInt();
System.out.print("Enter time : ");
int t=sc.nextInt();
System.out.print("Enter R of I : ");
int r=sc.nextInt();

int si=(p*t*r)/100;

System.out.println("SI Amount : "+si);
}
}
-------------------------------
Relational ops:
import java.util.Scanner;
class a{
public static void main(String args[]){
Scanner sc=new Scanner(System.in);
int a=5;
int b=2;
System.out.println(a>b);
System.out.println(a<b);
System.out.println(a<=b);
System.out.println(a>=b);
System.out.println(a==b);
System.out.println(a!=b);
}
}
-----------------------------
Assignment Ops:
=,+=,-=,/=
import java.util.Scanner;
class a{
public static void main(String args[]){
Scanner sc=new Scanner(System.in);
int a=2;
int b=3;
a+=b; //2+=3
System.out.println(a); //5
a*=b; //5*=3
System.out.println(a); //15
a-=b;//15-=3
System.out.println(a); //12
}
}
-----------------------------
uniary Ops ++,--
pre increment  ++a
post increment  a++
pre decrement   --a
post decrement   a--

import java.util.Scanner;
class a{
public static void main(String args[]){
Scanner sc=new Scanner(System.in);
int a=2,b=9,c=5,d=7;
//post increment
System.out.println(a++);
System.out.println(a);
//post decrement
System.out.println(b--);
System.out.println(b);
//pre increment
System.out.println(++c);
//pre decrement
System.out.println(--d);
}
}
-----------------
Logical Ops 
&& ->logical and,
|| ->logical or,
!  ->logical not or not

Not(!):
!True=False
!False=True

class a{
public static void main(String args[]){
int a=5,b=7;
System.out.println(!(a==b));
}
}
--------------------
logical and (&&) :
1-> true
0-> false
c1	c2	result
1	 1	  1
0	 1	  0
1	 0	  0
0 	 0	  0

class a{
public static void main(String args[]){
int a=2,b=3;
System.out.println((a!=b)&&(a<b));
}
}
----------------------
logical or (||) :
1-> true
0-> false
c1	c2	result
1	 1	  1
0	 1	  1
1	 0	  1
0 	 0	  0

class a{
public static void main(String args[]){
int a=2,b=3;
System.out.println((a==b)||(a<b));
}
}
-----------------------------
Bitwise Ops:
 &->Bitwise and,
 |->Bitwise or,
 ^->Bitwise Xor,
 ~->one complem... or tilde

^ :
a-b or b-a 
we can't consider -ve values.

~:
 -ve :+ve-1
 +ve :-ve-1

c=5
5:-5-1
 :-6

-9:9-1
  :8

2-0010
3-0011
--------
  0010 ->2  &
  0011 ->3  |
  0001 ->1  ^

class a{
public static void main(String args[]){
int a=2;//0010
int b=3;//0011
int c=5;
int d=-9;
System.out.println(a&b);
System.out.println(a|b);
System.out.println(a^b);
System.out.println(~c);
System.out.println(~d);


}
}
---------------------------
Shift Ops :
 >> -> right shift,
 << -> left shift

class a{
public static void main(String args[]){
int a=7;//0111
System.out.println(a<<1);
System.out.println(a<<2);
System.out.println(a>>1);
System.out.println(a>>2);


}
}
---------------------
Terinary Ops :
? :
syntax:
(cond)?True:False;

i need to found it big no.

class a{
public static void main(String args[]){
int a=30,b=8,big;
big=(a>b)?a:b;
System.out.println(big);
}
}

---------------------------
control statement:
there are two types of control statements:
1.condition
2.Iterative

Condition control statement:
1.If
2.switch case

If : it's widly used for control statement. It contain several forms

1.simple if: if else
2.block if: if
3.multi conditional : if else if ...
4.nested if : if ... if

simple if:
syntax:
if(condition)
{

 ......
}
else{
......
}

//wap to read two numbers and print biggest number:
class a{
public static void main(String args[]){
int a=88,b=133;
if(a>b){
System.out.println("a is Biggest no : "+a);
 }
else{
System.out.println("b is Biggest no : "+b);

 }
}
}

-----------------------
//wap to read a number and test for even or odd num .
//wap to read year and test leap year or not?
//wap a num and test it common multiple of 3 and 5 (use &&)

multi conditional and if control statement:
if else if

syntax:
if(condition1){
...
}
else if(cond2){
....
}
else if(cond3){
.....
}
..........
else if(cond N){
....
}
else{
.......
}
-----------
code 1 :
wap to read three numb and print biggest number.
class a{
public static void main(String args[]){
int a=188,b=133,c=212;
if(a>b){
System.out.println("a is Biggest no : "+a);
 }
else if(b>c){
System.out.println("b is Biggest no : "+b);
 }
else if(a>c){
System.out.println("a is Biggest no : "+a);
}
else{
System.out.println("c is Biggest no : "+c);
}
}
}
--------------
code 2:
class a{
public static void main(String args[]){
int a=188,b=133,c=212;
if(a>b && a>c){
System.out.println("a is Biggest no : "+a);
 }
else if(b>c){
System.out.println("b is Biggest no : "+b);
 }
else{
System.out.println("c is Biggest no : "+c);
}
}
}
--------------------------
student marks and assign/print grade based on marks range
91-100 - A
81-90 -B
71- 80 -c
other wise - P
--------------------
ascii values:
A=65  a=97  0=48
Z=90  z=122 9=57
----------------------
class a{
public static void main(String... args){
char c='B';
if(c>=65 && c<=90){
System.out.println("upper case "+c);
}
else if(c>=97 && c<=122){
System.out.println("lower case "+c);
}
else if(c>=48 && c<=57){
System.out.println("numeric "+c);
}
else{
System.out.println("Special chara " +c);
}
}
}
----------------------------------------
block if:
syntax:
if(condition){
statement;
}

class a{
public static void main(String... args){
int n=2;
if(n%3==0){
System.out.println("multiple with 3");
}
}
}
-------------------
nested if:
syntax:
if(condition outer){
if(cond inner){
  st;
}
else{
st;  
} //inner
}
else{
st;
}

code:
class a{
public static void main(String... args){
char n='8';
if((n>=65 && n<=90) || (n>=97 && n<=122))
{
  if(n>=65 && n<=90)
   {
     System.out.println("this is upper case");
    }
   else{
      System.out.println("this is lower case");
      }
}
else{
System.out.println("this is special chara");

}
}
}
-----------------------------------
looping or iterative:
for loop
while loop     //init ; cond; ++/--
do-while

for loop:
syntax:
for(init;cond;++/--){
st;
}

wap to print 1 to 10
class a{
public static void main(String... args){
for(int i=1;i<=10;i++){
System.out.print(i+" ");
}
}
}
-------------------
wap to print 10 to 1
class a{
public static void main(String... args){
for(int i=10;i>=1;i--){
System.out.print(i+" ");
}
}
}
---------------
wap to print A to Z
class a{
public static void main(String... args){
for(int i=65;i<=90;i++){
System.out.print((char)i+" ");
}
}
}
--------------------------------------------
wap to print Z to A
wap to print a to z
wap to print z to a
------------------------
while loop:
syntax:
init;
while(cond){
st;
++/--;
}
-------------------
wap to print 100 to 90
class a{
public static void main(String... args){
int i=100;
while(i>=90){
System.out.print(i+"  ");
i=i-1;
}
}
}
------------------
do-while:
syntax:
do{
st;
++/--;
}while(cond);

code: 
wap to print 15 to 50
class a{
public static void main(String... args){
int i=15;
do{
System.out.print(i+"  ");
i=i+1;
}while(i<=50);
}
}
----------
class a{
public static void main(String... args){
int i=65;
do{
System.out.print((char)i+" ");
i=i+1;
}while(i<=90);
}
}
------------------
control flow statements:
1.break
2.continue
3.switch case
4.System.exit(0)

1.break:
class a{
public static void main(String... args){
int i=65;
do{
System.out.println(i+" ");
i=i+1;
break;
}while(i<=90);
}
}
---------------
//wap to print 1 to 10 but i need to stop 7 number
class a{
public static void main(String... args){
int i=1;
while(i<=10){
if(i==7)
break;
System.out.print(i+" ");
i=i+1;
}
}
}
-------------------------
continue:
//wap to print 1 to 10 but i need to stop 7 number
class a{
public static void main(String... args){
for(int i=1;i<=10;i++){
if(i==5)
continue;
System.out.print(i+" ");
}
}
}
---------------
System.exit(0):
//wap to print 1 to 10 but i need to stop 7 number
class a{
public static void main(String... args){
System.out.println(11);
System.out.println(12);
System.out.println(13);
System.out.println(14);
System.exit(0);
System.out.println(15);
System.out.println(16);
System.out.println(17);
System.out.println(18);

}
}
--------------------------------
Switch case():
-------------
syntax:
switch case(vari)
{
case 1: st;
break;
case 2: st;
break;
case 3: st;
break;
case 4: st;
break;
..........
case N: st;
break;
default: st;
break;
}

code:
class a{
public static void main(String... args){
int i=5;
switch(i){
case 1: System.out.println("Java");
break;
case 2: System.out.println("Python");
break;
case 3: System.out.println("PHP");
break;
default:System.out.println("choose correct option 1 to 3");
break;
}
}
}
------------
nested for loop:
syntax:
for(init;cond;++/--) -> outerloop 
{
for(init;cond;++/--) -> innerloop 
{
st;
}
}
wap to print
11111
22222
33333
44444
55555

class a{
public static void main(String... args){
int i,j;                              
for(i=1;i<=5;i++)       
{                       
for(j=1;j<=5;j++) 
{
System.out.print(i);
}
System.out.print("\n");

}
}
}
----------
wap to print
12345
12345
12345
12345
12345
class a{
public static void main(String... args){
int i,j;                              
for(i=1;i<=5;i++)       
{                       
for(j=1;j<=5;j++) 
{
System.out.print(j);
}
System.out.print("\n");

}
}
}






















